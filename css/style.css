body,
ul,
li,
p{
    margin: 0;
    padding: 0;
    font-family: Arial, Helvetica, sans-serif;
    font-size: 1.2rem;
    list-style: none;
}

a{
    text-decoration: none;
    color: white;
}

/* Section Header */

.header{
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-wrap: wrap;
    padding: 20px;
    background-color: #000;
}

.menu{
    display: flex;
    gap: 10px;
}

.menu li a {
    display: block;
    padding: 10px;

}

h1{
    margin-top: 100px;
    text-align: center;
}

img{
    max-width: 100%;
}

/* CSS FLEXBOX */

.flex{
    display: flex;

    /* Indica que os elementos da div pode quebrar se couber na tela */
    flex-wrap: wrap;
    /* A tag pai vai ter no maximo 800 de tamnaho */
    max-width: 800px;
    margin: 0 auto;

}

.flex > div{

    /* 1: crescer / 1:diminuir / 200:tamanho */
    flex: 1 1 200px;
    /* Margin entre os elementos */
    margin: 10px;
}

/* CSS GRID */


/* Container das divs */
.grid{
    /* Definir como grid */
    display: grid;

    /* Divide 100% da tela em 3 partes */
    /* grid-template-columns: 1fr 1fr 1fr; */

    /* Outra forma de deninir as colunas */
    grid-template-columns: repeat(3,1fr);
    max-width: 800px;
    padding: 10px;
    margin: 0 auto;


    /* Espaco entre os itens */
    gap: 20px;
}

/* Com esse comando div:nth-child(1), voce pode selecionar a posicao da tive*/
.grid > div:nth-child(n + 4){ /* n + 4 no 4 em diante vai ser adicionado algo */
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 10px;
    align-items: center;
}

body{
    margin-bottom: 100px;
}

.grid > div.anuncio{

    /* A div anuncio vai ser adicionado na primeira coluna */
    grid-column: 1;
    /* A div anuncio vai ocupar 2 colunas e 5 linhas */
    grid-row: 2/5;
    display: block;
}

/* Responsividade quando a tela estiver menor que 600px */
@media (max-width:600px) {
    
    /* A divisao to container vai passar a ser duas colunas */
    .grid{
        grid-template-columns:  repeat(2,1fr);
    }

    /* Vai voltar as div pequenas para o tanho inicial responsivo */
    .grid > div:nth-child(n + 4){
        display: block;
    }

    /* Reposicionar a div anuncio para o tamanho inicial sem ocupar 2/5 */
    .grid > div.anuncio{

        /* Div anuncio volta para o tamanho das demias divs */
        grid-column: auto;
        grid-row: auto;
        /*Quando a tela atingir 600px, a div anuncio vira a primeira caixa da coluna */
        order: -1;
    }

}

/* CSS GRID2 */

.grid2{
    display: grid;
    grid-template-columns: 1fr 200px;
    max-width: 800px;
    padding: 10px;
    gap: 20px;
    margin: 0 auto;
}

.sadebar{
    margin-bottom: 10px;
}

@media (max-width: 600px) {
    .grid2{
        grid-template-columns: 1fr;
    }
    .sadebar{
        display: flex;
        overflow: scroll;
    }

    .sadebar > div {
        flex: 1 0 200px;
        margin: 0 10px;
    }
}

